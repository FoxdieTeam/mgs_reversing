--- before
+++ after
@@ -16,52 +16,56 @@
 } RGBElement;
 void title_open_800CE378(OpenWork *work, int index)
 {
+  int *new_var2;
+  OpenWork *new_var;
   RGBElement *base = (RGBElement *) (((char *) work) + 0x18C);
-  RGBElement *elem = &base[index];
-  int temp;
-  switch (work->fA8C)
+  short temp;
+  new_var = work;
+  switch (new_var->fA8C)
   {
     case 0:
-      if (work->f178 >= 0x80)
+      RGBElement *elem = &base[index];
+      if (new_var->f178 >= 0x80)
     {
-      work->fA8C = 1;
-      work->f178 = 0;
+      new_var->fA8C = (double) 1;
+      new_var->f178 = 0;
     }
       break;
 
+    new_var2 = &new_var->f178;
     case 1:
-      temp = work->f178;
+      temp = *new_var2;
       elem->r = temp;
       elem->g = temp;
       elem->b = temp;
       if (temp >= 0x80)
     {
-      work->fA8C = 2;
+      new_var->fA8C = 2;
     }
       break;
 
     case 2:
-      temp = work->f178;
-      temp = (temp * 4) + 0x80;
+      temp = *new_var2;
+      temp = 0x80 + (temp * 4);
       elem->r = temp;
       elem->g = temp;
       elem->b = temp;
-      if (work->f178 >= 0x1F)
+      if ((*new_var2) >= 0x1F)
     {
-      work->fA8C = 3;
+      new_var->fA8C = 3;
     }
       break;
 
     case 3:
-      temp = work->f178;
+      temp = *new_var2;
       temp = 0xFF - ((temp * 4) / 3);
       elem->r = temp;
       elem->g = temp;
       elem->b = temp;
-      if (work->f178 >= 0x60)
+      if ((*new_var2) >= 0x60)
     {
-      work->fA8C = 4;
-      work->f178 = 0;
+      new_var->fA8C = 4;
+      new_var->f178 = 0;
       elem->r = 0x80;
       elem->g = 0x80;
       elem->b = 0x80;
