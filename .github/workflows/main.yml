name: ISO

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Psy-Q build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libswscale-dev libavformat-dev libtinyxml2-dev gcc-mipsel-linux-gnu g++-mipsel-linux-gnu binutils-mipsel-linux-gnu
        version: 1.0
          
    - name: Install mkpsxiso
      run: |
        wget https://github.com/Lameguy64/mkpsxiso/releases/download/v2.03/mkpsxiso-2.03-Linux.deb
        sudo dpkg -i mkpsxiso-2.03-Linux.deb

    - name: Restore PsyQ
      id: cache-psyq
      uses: actions/cache/restore@v3
      with:
        path: mips/psyq
        key: psyq

    - name: Download PsyQ
      if: steps.cache-psyq.outputs.cache-hit != 'true'
      run: |
        mkdir -p mips
        cd mips
        wget http://psx.arthus.net/sdk/Psy-Q/psyq-4_7-converted-light.zip
        unzip psyq-4_7-converted-light.zip
        mv psyq-4_7-converted psyq
        wget https://archive.org/download/psyq-sdk/PSYQ_SDK.zip/psyq%2Fcdgen%2FLCNSFILE%2FLICENSEA.DAT -O psyq/LICENSEA.DAT
        
    - name: Cache PsyQ
      if: steps.cache-psyq.outputs.cache-hit != 'true'
      id: save-psyq
      uses: actions/cache/save@v3
      with:
        path: mips/psyq
        key: psyq
              
    - name: Build
      run: |
        cdÂ build
        pip install -r requirements.txt
        python build.py --psyq_path=../mips/psyq/
      
    - name: Upload Artifact
      uses: actions/upload-artifact@master
      with:
        name: MGS-PsyQ
        path: |
          MGS.bin
          MGS.cue
